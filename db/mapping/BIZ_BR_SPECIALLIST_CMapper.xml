<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bea.dao.BIZ_BR_SPECIALLIST_CMapper">
  <resultMap id="BaseResultMap" type="com.bea.olp.BIZ_BR_SPECIALLIST_C">
    <id column="APP_NO" jdbcType="VARCHAR" property="appNo" />
    <result column="ID" jdbcType="VARCHAR" property="id" />
    <result column="CELL" jdbcType="VARCHAR" property="cell" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="LINKMAN_CELL" jdbcType="VARCHAR" property="linkmanCell" />
    <result column="TIME_RANGE" jdbcType="VARCHAR" property="timeRange" />
    <result column="FLAG_SPECIALLIST_C" jdbcType="VARCHAR" property="flagSpeciallistC" />
    <result column="SL_ID_ABNORMAL" jdbcType="VARCHAR" property="slIdAbnormal" />
    <result column="SL_ID_PHONE_OVERDUE" jdbcType="VARCHAR" property="slIdPhoneOverdue" />
    <result column="SL_ID_COURT_BAD" jdbcType="VARCHAR" property="slIdCourtBad" />
    <result column="SL_ID_COURT_EXECUTED" jdbcType="VARCHAR" property="slIdCourtExecuted" />
    <result column="SL_ID_BANK_BAD" jdbcType="VARCHAR" property="slIdBankBad" />
    <result column="SL_ID_BANK_OVERDUE" jdbcType="VARCHAR" property="slIdBankOverdue" />
    <result column="SL_ID_BANK_FRAUD" jdbcType="VARCHAR" property="slIdBankFraud" />
    <result column="SL_ID_BANK_LOST" jdbcType="VARCHAR" property="slIdBankLost" />
    <result column="SL_ID_BANK_REFUSE" jdbcType="VARCHAR" property="slIdBankRefuse" />
    <result column="SL_ID_P2P_BAD" jdbcType="VARCHAR" property="slIdP2pBad" />
    <result column="SL_ID_P2P_OVERDUE" jdbcType="VARCHAR" property="slIdP2pOverdue" />
    <result column="SL_ID_P2P_FRAUD" jdbcType="VARCHAR" property="slIdP2pFraud" />
    <result column="SL_ID_P2P_LOST" jdbcType="VARCHAR" property="slIdP2pLost" />
    <result column="SL_ID_P2P_REFUSE" jdbcType="VARCHAR" property="slIdP2pRefuse" />
    <result column="SL_ID_NBANK_P2P_BAD" jdbcType="VARCHAR" property="slIdNbankP2pBad" />
    <result column="SL_ID_NBANK_P2P_OVERDUE" jdbcType="VARCHAR" property="slIdNbankP2pOverdue" />
    <result column="SL_ID_NBANK_P2P_FRAUD" jdbcType="VARCHAR" property="slIdNbankP2pFraud" />
    <result column="SL_ID_NBANK_P2P_LOST" jdbcType="VARCHAR" property="slIdNbankP2pLost" />
    <result column="SL_ID_NBANK_P2P_REFUSE" jdbcType="VARCHAR" property="slIdNbankP2pRefuse" />
    <result column="SL_ID_NBANK_MC_BAD" jdbcType="VARCHAR" property="slIdNbankMcBad" />
    <result column="SL_ID_NBANK_MC_OVERDUE" jdbcType="VARCHAR" property="slIdNbankMcOverdue" />
    <result column="SL_ID_NBANK_MC_FRAUD" jdbcType="VARCHAR" property="slIdNbankMcFraud" />
    <result column="SL_ID_NBANK_MC_LOST" jdbcType="VARCHAR" property="slIdNbankMcLost" />
    <result column="SL_ID_NBANK_MC_REFUSE" jdbcType="VARCHAR" property="slIdNbankMcRefuse" />
    <result column="SL_ID_NBANK_CA_BAD" jdbcType="VARCHAR" property="slIdNbankCaBad" />
    <result column="SL_ID_NBANK_CA_OVERDUE" jdbcType="VARCHAR" property="slIdNbankCaOverdue" />
    <result column="SL_ID_NBANK_CA_FRAUD" jdbcType="VARCHAR" property="slIdNbankCaFraud" />
    <result column="SL_ID_NBANK_CA_LOST" jdbcType="VARCHAR" property="slIdNbankCaLost" />
    <result column="SL_ID_NBANK_CA_REFUSE" jdbcType="VARCHAR" property="slIdNbankCaRefuse" />
    <result column="SL_ID_NBANK_COM_BAD" jdbcType="VARCHAR" property="slIdNbankComBad" />
    <result column="SL_ID_NBANK_COM_OVERDUE" jdbcType="VARCHAR" property="slIdNbankComOverdue" />
    <result column="SL_ID_NBANK_COM_FRAUD" jdbcType="VARCHAR" property="slIdNbankComFraud" />
    <result column="SL_ID_NBANK_COM_LOST" jdbcType="VARCHAR" property="slIdNbankComLost" />
    <result column="SL_ID_NBANK_COM_REFUSE" jdbcType="VARCHAR" property="slIdNbankComRefuse" />
    <result column="SL_ID_NBANK_CF_BAD" jdbcType="VARCHAR" property="slIdNbankCfBad" />
    <result column="SL_ID_NBANK_CF_OVERDUE" jdbcType="VARCHAR" property="slIdNbankCfOverdue" />
    <result column="SL_ID_NBANK_CF_FRAUD" jdbcType="VARCHAR" property="slIdNbankCfFraud" />
    <result column="SL_ID_NBANK_CF_LOST" jdbcType="VARCHAR" property="slIdNbankCfLost" />
    <result column="SL_ID_NBANK_CF_REFUSE" jdbcType="VARCHAR" property="slIdNbankCfRefuse" />
    <result column="SL_ID_NBANK_OTHER_BAD" jdbcType="VARCHAR" property="slIdNbankOtherBad" />
    <result column="SL_ID_NBANK_OTHER_OVERDUE" jdbcType="VARCHAR" property="slIdNbankOtherOverdue" />
    <result column="SL_ID_NBANK_OTHER_FRAUD" jdbcType="VARCHAR" property="slIdNbankOtherFraud" />
    <result column="SL_ID_NBANK_OTHER_LOST" jdbcType="VARCHAR" property="slIdNbankOtherLost" />
    <result column="SL_ID_NBANK_OTHER_REFUSE" jdbcType="VARCHAR" property="slIdNbankOtherRefuse" />
    <result column="SL_CELL_ABNORMAL" jdbcType="VARCHAR" property="slCellAbnormal" />
    <result column="SL_CELL_PHONE_OVERDUE" jdbcType="VARCHAR" property="slCellPhoneOverdue" />
    <result column="SL_CELL_BANK_BAD" jdbcType="VARCHAR" property="slCellBankBad" />
    <result column="SL_CELL_BANK_OVERDUE" jdbcType="VARCHAR" property="slCellBankOverdue" />
    <result column="SL_CELL_BANK_FRAUD" jdbcType="VARCHAR" property="slCellBankFraud" />
    <result column="SL_CELL_BANK_LOST" jdbcType="VARCHAR" property="slCellBankLost" />
    <result column="SL_CELL_BANK_REFUSE" jdbcType="VARCHAR" property="slCellBankRefuse" />
    <result column="SL_CELL_P2P_BAD" jdbcType="VARCHAR" property="slCellP2pBad" />
    <result column="SL_CELL_P2P_OVERDUE" jdbcType="VARCHAR" property="slCellP2pOverdue" />
    <result column="SL_CELL_P2P_FRAUD" jdbcType="VARCHAR" property="slCellP2pFraud" />
    <result column="SL_CELL_P2P_LOST" jdbcType="VARCHAR" property="slCellP2pLost" />
    <result column="SL_CELL_P2P_REFUSE" jdbcType="VARCHAR" property="slCellP2pRefuse" />
    <result column="SL_CELL_NBANK_P2P_BAD" jdbcType="VARCHAR" property="slCellNbankP2pBad" />
    <result column="SL_CELL_NBANK_P2P_OVERDUE" jdbcType="VARCHAR" property="slCellNbankP2pOverdue" />
    <result column="SL_CELL_NBANK_P2P_FRAUD" jdbcType="VARCHAR" property="slCellNbankP2pFraud" />
    <result column="SL_CELL_NBANK_P2P_LOST" jdbcType="VARCHAR" property="slCellNbankP2pLost" />
    <result column="SL_CELL_NBANK_P2P_REFUSE" jdbcType="VARCHAR" property="slCellNbankP2pRefuse" />
    <result column="SL_CELL_NBANK_MC_BAD" jdbcType="VARCHAR" property="slCellNbankMcBad" />
    <result column="SL_CELL_NBANK_MC_OVERDUE" jdbcType="VARCHAR" property="slCellNbankMcOverdue" />
    <result column="SL_CELL_NBANK_MC_FRAUD" jdbcType="VARCHAR" property="slCellNbankMcFraud" />
    <result column="SL_CELL_NBANK_MC_LOST" jdbcType="VARCHAR" property="slCellNbankMcLost" />
    <result column="SL_CELL_NBANK_MC_REFUSE" jdbcType="VARCHAR" property="slCellNbankMcRefuse" />
    <result column="SL_CELL_NBANK_CA_BAD" jdbcType="VARCHAR" property="slCellNbankCaBad" />
    <result column="SL_CELL_NBANK_CA_OVERDUE" jdbcType="VARCHAR" property="slCellNbankCaOverdue" />
    <result column="SL_CELL_NBANK_CA_FRAUD" jdbcType="VARCHAR" property="slCellNbankCaFraud" />
    <result column="SL_CELL_NBANK_CA_LOST" jdbcType="VARCHAR" property="slCellNbankCaLost" />
    <result column="SL_CELL_NBANK_CA_REFUSE" jdbcType="VARCHAR" property="slCellNbankCaRefuse" />
    <result column="SL_CELL_NBANK_COM_BAD" jdbcType="VARCHAR" property="slCellNbankComBad" />
    <result column="SL_CELL_NBANK_COM_OVERDUE" jdbcType="VARCHAR" property="slCellNbankComOverdue" />
    <result column="SL_CELL_NBANK_COM_FRAUD" jdbcType="VARCHAR" property="slCellNbankComFraud" />
    <result column="SL_CELL_NBANK_COM_LOST" jdbcType="VARCHAR" property="slCellNbankComLost" />
    <result column="SL_CELL_NBANK_COM_REFUSE" jdbcType="VARCHAR" property="slCellNbankComRefuse" />
    <result column="SL_CELL_NBANK_CF_BAD" jdbcType="VARCHAR" property="slCellNbankCfBad" />
    <result column="SL_CELL_NBANK_CF_OVERDUE" jdbcType="VARCHAR" property="slCellNbankCfOverdue" />
    <result column="SL_CELL_NBANK_CF_FRAUD" jdbcType="VARCHAR" property="slCellNbankCfFraud" />
    <result column="SL_CELL_NBANK_CF_LOST" jdbcType="VARCHAR" property="slCellNbankCfLost" />
    <result column="SL_CELL_NBANK_CF_REFUSE" jdbcType="VARCHAR" property="slCellNbankCfRefuse" />
    <result column="SL_CELL_NBANK_OTHER_BAD" jdbcType="VARCHAR" property="slCellNbankOtherBad" />
    <result column="SL_CELL_NBANK_OTHER_OVERDUE" jdbcType="VARCHAR" property="slCellNbankOtherOverdue" />
    <result column="SL_CELL_NBANK_OTHER_FRAUD" jdbcType="VARCHAR" property="slCellNbankOtherFraud" />
    <result column="SL_CELL_NBANK_OTHER_LOST" jdbcType="VARCHAR" property="slCellNbankOtherLost" />
    <result column="SL_CELL_NBANK_OTHER_REFUSE" jdbcType="VARCHAR" property="slCellNbankOtherRefuse" />
    <result column="SL_LM_CELL_ABNORMAL" jdbcType="VARCHAR" property="slLmCellAbnormal" />
    <result column="SL_LM_CELL_PHONE_OVERDUE" jdbcType="VARCHAR" property="slLmCellPhoneOverdue" />
    <result column="SL_LM_CELL_BANK_BAD" jdbcType="VARCHAR" property="slLmCellBankBad" />
    <result column="SL_LM_CELL_BANK_OVERDUE" jdbcType="VARCHAR" property="slLmCellBankOverdue" />
    <result column="SL_LM_CELL_BANK_FRAUD" jdbcType="VARCHAR" property="slLmCellBankFraud" />
    <result column="SL_LM_CELL_BANK_LOST" jdbcType="VARCHAR" property="slLmCellBankLost" />
    <result column="SL_LM_CELL_BANK_REFUSE" jdbcType="VARCHAR" property="slLmCellBankRefuse" />
    <result column="SL_LM_CELL_NBANK_P2P_BAD" jdbcType="VARCHAR" property="slLmCellNbankP2pBad" />
    <result column="SL_LM_CELL_NBANK_P2P_OVERDUE" jdbcType="VARCHAR" property="slLmCellNbankP2pOverdue" />
    <result column="SL_LM_CELL_NBANK_P2P_FRAUD" jdbcType="VARCHAR" property="slLmCellNbankP2pFraud" />
    <result column="SL_LM_CELL_NBANK_P2P_LOST" jdbcType="VARCHAR" property="slLmCellNbankP2pLost" />
    <result column="SL_LM_CELL_NBANK_P2P_REFUSE" jdbcType="VARCHAR" property="slLmCellNbankP2pRefuse" />
    <result column="SL_LM_CELL_NBANK_MC_BAD" jdbcType="VARCHAR" property="slLmCellNbankMcBad" />
    <result column="SL_LM_CELL_NBANK_MC_OVERDUE" jdbcType="VARCHAR" property="slLmCellNbankMcOverdue" />
    <result column="SL_LM_CELL_NBANK_MC_FRAUD" jdbcType="VARCHAR" property="slLmCellNbankMcFraud" />
    <result column="SL_LM_CELL_NBANK_MC_LOST" jdbcType="VARCHAR" property="slLmCellNbankMcLost" />
    <result column="SL_LM_CELL_NBANK_MC_REFUSE" jdbcType="VARCHAR" property="slLmCellNbankMcRefuse" />
    <result column="SL_LM_CELL_NBANK_CA_BAD" jdbcType="VARCHAR" property="slLmCellNbankCaBad" />
    <result column="SL_LM_CELL_NBANK_CA_OVERDUE" jdbcType="VARCHAR" property="slLmCellNbankCaOverdue" />
    <result column="SL_LM_CELL_NBANK_CA_FRAUD" jdbcType="VARCHAR" property="slLmCellNbankCaFraud" />
    <result column="SL_LM_CELL_NBANK_CA_LOST" jdbcType="VARCHAR" property="slLmCellNbankCaLost" />
    <result column="SL_LM_CELL_NBANK_CA_REFUSE" jdbcType="VARCHAR" property="slLmCellNbankCaRefuse" />
    <result column="SL_LM_CELL_NBANK_COM_BAD" jdbcType="VARCHAR" property="slLmCellNbankComBad" />
    <result column="SL_LM_CELL_NBANK_COM_OVERDUE" jdbcType="VARCHAR" property="slLmCellNbankComOverdue" />
    <result column="SL_LM_CELL_NBANK_COM_FRAUD" jdbcType="VARCHAR" property="slLmCellNbankComFraud" />
    <result column="SL_LM_CELL_NBANK_COM_LOST" jdbcType="VARCHAR" property="slLmCellNbankComLost" />
    <result column="SL_LM_CELL_NBANK_COM_REFUSE" jdbcType="VARCHAR" property="slLmCellNbankComRefuse" />
    <result column="SL_LM_CELL_NBANK_CF_BAD" jdbcType="VARCHAR" property="slLmCellNbankCfBad" />
    <result column="SL_LM_CELL_NBANK_CF_OVERDUE" jdbcType="VARCHAR" property="slLmCellNbankCfOverdue" />
    <result column="SL_LM_CELL_NBANK_CF_FRAUD" jdbcType="VARCHAR" property="slLmCellNbankCfFraud" />
    <result column="SL_LM_CELL_NBANK_CF_LOST" jdbcType="VARCHAR" property="slLmCellNbankCfLost" />
    <result column="SL_LM_CELL_NBANK_CF_REFUSE" jdbcType="VARCHAR" property="slLmCellNbankCfRefuse" />
    <result column="SL_LM_CELL_NBANK_OTHER_BAD" jdbcType="VARCHAR" property="slLmCellNbankOtherBad" />
    <result column="SL_LM_CELL_NBANK_OTHER_OVERDUE" jdbcType="VARCHAR" property="slLmCellNbankOtherOverdue" />
    <result column="SL_LM_CELL_NBANK_OTHER_FRAUD" jdbcType="VARCHAR" property="slLmCellNbankOtherFraud" />
    <result column="SL_LM_CELL_NBANK_OTHER_LOST" jdbcType="VARCHAR" property="slLmCellNbankOtherLost" />
    <result column="SL_LM_CELL_NBANK_OTHER_REFUSE" jdbcType="VARCHAR" property="slLmCellNbankOtherRefuse" />
    <result column="INPUT_DATE" jdbcType="VARCHAR" property="inputDate" />
    <result column="INPUT_TIME" jdbcType="VARCHAR" property="inputTime" />
    <result column="LAST_UPDATE_DATE" jdbcType="VARCHAR" property="lastUpdateDate" />
    <result column="LAST_UPDATE_TIME" jdbcType="VARCHAR" property="lastUpdateTime" />
    <result column="SWIFT_NUMBER" jdbcType="VARCHAR" property="swiftNumber" />
    <result column="CODE" jdbcType="VARCHAR" property="code" />
  </resultMap>
  <sql id="Base_Column_List">
    APP_NO, ID, CELL, NAME, LINKMAN_CELL, TIME_RANGE, FLAG_SPECIALLIST_C, SL_ID_ABNORMAL, 
    SL_ID_PHONE_OVERDUE, SL_ID_COURT_BAD, SL_ID_COURT_EXECUTED, SL_ID_BANK_BAD, SL_ID_BANK_OVERDUE, 
    SL_ID_BANK_FRAUD, SL_ID_BANK_LOST, SL_ID_BANK_REFUSE, SL_ID_P2P_BAD, SL_ID_P2P_OVERDUE, 
    SL_ID_P2P_FRAUD, SL_ID_P2P_LOST, SL_ID_P2P_REFUSE, SL_ID_NBANK_P2P_BAD, SL_ID_NBANK_P2P_OVERDUE, 
    SL_ID_NBANK_P2P_FRAUD, SL_ID_NBANK_P2P_LOST, SL_ID_NBANK_P2P_REFUSE, SL_ID_NBANK_MC_BAD, 
    SL_ID_NBANK_MC_OVERDUE, SL_ID_NBANK_MC_FRAUD, SL_ID_NBANK_MC_LOST, SL_ID_NBANK_MC_REFUSE, 
    SL_ID_NBANK_CA_BAD, SL_ID_NBANK_CA_OVERDUE, SL_ID_NBANK_CA_FRAUD, SL_ID_NBANK_CA_LOST, 
    SL_ID_NBANK_CA_REFUSE, SL_ID_NBANK_COM_BAD, SL_ID_NBANK_COM_OVERDUE, SL_ID_NBANK_COM_FRAUD, 
    SL_ID_NBANK_COM_LOST, SL_ID_NBANK_COM_REFUSE, SL_ID_NBANK_CF_BAD, SL_ID_NBANK_CF_OVERDUE, 
    SL_ID_NBANK_CF_FRAUD, SL_ID_NBANK_CF_LOST, SL_ID_NBANK_CF_REFUSE, SL_ID_NBANK_OTHER_BAD, 
    SL_ID_NBANK_OTHER_OVERDUE, SL_ID_NBANK_OTHER_FRAUD, SL_ID_NBANK_OTHER_LOST, SL_ID_NBANK_OTHER_REFUSE, 
    SL_CELL_ABNORMAL, SL_CELL_PHONE_OVERDUE, SL_CELL_BANK_BAD, SL_CELL_BANK_OVERDUE, 
    SL_CELL_BANK_FRAUD, SL_CELL_BANK_LOST, SL_CELL_BANK_REFUSE, SL_CELL_P2P_BAD, SL_CELL_P2P_OVERDUE, 
    SL_CELL_P2P_FRAUD, SL_CELL_P2P_LOST, SL_CELL_P2P_REFUSE, SL_CELL_NBANK_P2P_BAD, SL_CELL_NBANK_P2P_OVERDUE, 
    SL_CELL_NBANK_P2P_FRAUD, SL_CELL_NBANK_P2P_LOST, SL_CELL_NBANK_P2P_REFUSE, SL_CELL_NBANK_MC_BAD, 
    SL_CELL_NBANK_MC_OVERDUE, SL_CELL_NBANK_MC_FRAUD, SL_CELL_NBANK_MC_LOST, SL_CELL_NBANK_MC_REFUSE, 
    SL_CELL_NBANK_CA_BAD, SL_CELL_NBANK_CA_OVERDUE, SL_CELL_NBANK_CA_FRAUD, SL_CELL_NBANK_CA_LOST, 
    SL_CELL_NBANK_CA_REFUSE, SL_CELL_NBANK_COM_BAD, SL_CELL_NBANK_COM_OVERDUE, SL_CELL_NBANK_COM_FRAUD, 
    SL_CELL_NBANK_COM_LOST, SL_CELL_NBANK_COM_REFUSE, SL_CELL_NBANK_CF_BAD, SL_CELL_NBANK_CF_OVERDUE, 
    SL_CELL_NBANK_CF_FRAUD, SL_CELL_NBANK_CF_LOST, SL_CELL_NBANK_CF_REFUSE, SL_CELL_NBANK_OTHER_BAD, 
    SL_CELL_NBANK_OTHER_OVERDUE, SL_CELL_NBANK_OTHER_FRAUD, SL_CELL_NBANK_OTHER_LOST, 
    SL_CELL_NBANK_OTHER_REFUSE, SL_LM_CELL_ABNORMAL, SL_LM_CELL_PHONE_OVERDUE, SL_LM_CELL_BANK_BAD, 
    SL_LM_CELL_BANK_OVERDUE, SL_LM_CELL_BANK_FRAUD, SL_LM_CELL_BANK_LOST, SL_LM_CELL_BANK_REFUSE, 
    SL_LM_CELL_NBANK_P2P_BAD, SL_LM_CELL_NBANK_P2P_OVERDUE, SL_LM_CELL_NBANK_P2P_FRAUD, 
    SL_LM_CELL_NBANK_P2P_LOST, SL_LM_CELL_NBANK_P2P_REFUSE, SL_LM_CELL_NBANK_MC_BAD, 
    SL_LM_CELL_NBANK_MC_OVERDUE, SL_LM_CELL_NBANK_MC_FRAUD, SL_LM_CELL_NBANK_MC_LOST, 
    SL_LM_CELL_NBANK_MC_REFUSE, SL_LM_CELL_NBANK_CA_BAD, SL_LM_CELL_NBANK_CA_OVERDUE, 
    SL_LM_CELL_NBANK_CA_FRAUD, SL_LM_CELL_NBANK_CA_LOST, SL_LM_CELL_NBANK_CA_REFUSE, 
    SL_LM_CELL_NBANK_COM_BAD, SL_LM_CELL_NBANK_COM_OVERDUE, SL_LM_CELL_NBANK_COM_FRAUD, 
    SL_LM_CELL_NBANK_COM_LOST, SL_LM_CELL_NBANK_COM_REFUSE, SL_LM_CELL_NBANK_CF_BAD, 
    SL_LM_CELL_NBANK_CF_OVERDUE, SL_LM_CELL_NBANK_CF_FRAUD, SL_LM_CELL_NBANK_CF_LOST, 
    SL_LM_CELL_NBANK_CF_REFUSE, SL_LM_CELL_NBANK_OTHER_BAD, SL_LM_CELL_NBANK_OTHER_OVERDUE, 
    SL_LM_CELL_NBANK_OTHER_FRAUD, SL_LM_CELL_NBANK_OTHER_LOST, SL_LM_CELL_NBANK_OTHER_REFUSE, 
    INPUT_DATE, INPUT_TIME, LAST_UPDATE_DATE, LAST_UPDATE_TIME, SWIFT_NUMBER, CODE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from BIZ_BR_SPECIALLIST_C
    where APP_NO = #{appNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from BIZ_BR_SPECIALLIST_C
    where APP_NO = #{appNo,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bea.olp.BIZ_BR_SPECIALLIST_C">
    insert into BIZ_BR_SPECIALLIST_C (APP_NO, ID, CELL, 
      NAME, LINKMAN_CELL, TIME_RANGE, 
      FLAG_SPECIALLIST_C, SL_ID_ABNORMAL, SL_ID_PHONE_OVERDUE, 
      SL_ID_COURT_BAD, SL_ID_COURT_EXECUTED, SL_ID_BANK_BAD, 
      SL_ID_BANK_OVERDUE, SL_ID_BANK_FRAUD, SL_ID_BANK_LOST, 
      SL_ID_BANK_REFUSE, SL_ID_P2P_BAD, SL_ID_P2P_OVERDUE, 
      SL_ID_P2P_FRAUD, SL_ID_P2P_LOST, SL_ID_P2P_REFUSE, 
      SL_ID_NBANK_P2P_BAD, SL_ID_NBANK_P2P_OVERDUE, SL_ID_NBANK_P2P_FRAUD, 
      SL_ID_NBANK_P2P_LOST, SL_ID_NBANK_P2P_REFUSE, SL_ID_NBANK_MC_BAD, 
      SL_ID_NBANK_MC_OVERDUE, SL_ID_NBANK_MC_FRAUD, SL_ID_NBANK_MC_LOST, 
      SL_ID_NBANK_MC_REFUSE, SL_ID_NBANK_CA_BAD, SL_ID_NBANK_CA_OVERDUE, 
      SL_ID_NBANK_CA_FRAUD, SL_ID_NBANK_CA_LOST, SL_ID_NBANK_CA_REFUSE, 
      SL_ID_NBANK_COM_BAD, SL_ID_NBANK_COM_OVERDUE, SL_ID_NBANK_COM_FRAUD, 
      SL_ID_NBANK_COM_LOST, SL_ID_NBANK_COM_REFUSE, SL_ID_NBANK_CF_BAD, 
      SL_ID_NBANK_CF_OVERDUE, SL_ID_NBANK_CF_FRAUD, SL_ID_NBANK_CF_LOST, 
      SL_ID_NBANK_CF_REFUSE, SL_ID_NBANK_OTHER_BAD, SL_ID_NBANK_OTHER_OVERDUE, 
      SL_ID_NBANK_OTHER_FRAUD, SL_ID_NBANK_OTHER_LOST, 
      SL_ID_NBANK_OTHER_REFUSE, SL_CELL_ABNORMAL, SL_CELL_PHONE_OVERDUE, 
      SL_CELL_BANK_BAD, SL_CELL_BANK_OVERDUE, SL_CELL_BANK_FRAUD, 
      SL_CELL_BANK_LOST, SL_CELL_BANK_REFUSE, SL_CELL_P2P_BAD, 
      SL_CELL_P2P_OVERDUE, SL_CELL_P2P_FRAUD, SL_CELL_P2P_LOST, 
      SL_CELL_P2P_REFUSE, SL_CELL_NBANK_P2P_BAD, SL_CELL_NBANK_P2P_OVERDUE, 
      SL_CELL_NBANK_P2P_FRAUD, SL_CELL_NBANK_P2P_LOST, 
      SL_CELL_NBANK_P2P_REFUSE, SL_CELL_NBANK_MC_BAD, 
      SL_CELL_NBANK_MC_OVERDUE, SL_CELL_NBANK_MC_FRAUD, 
      SL_CELL_NBANK_MC_LOST, SL_CELL_NBANK_MC_REFUSE, 
      SL_CELL_NBANK_CA_BAD, SL_CELL_NBANK_CA_OVERDUE, 
      SL_CELL_NBANK_CA_FRAUD, SL_CELL_NBANK_CA_LOST, 
      SL_CELL_NBANK_CA_REFUSE, SL_CELL_NBANK_COM_BAD, 
      SL_CELL_NBANK_COM_OVERDUE, SL_CELL_NBANK_COM_FRAUD, 
      SL_CELL_NBANK_COM_LOST, SL_CELL_NBANK_COM_REFUSE, 
      SL_CELL_NBANK_CF_BAD, SL_CELL_NBANK_CF_OVERDUE, 
      SL_CELL_NBANK_CF_FRAUD, SL_CELL_NBANK_CF_LOST, 
      SL_CELL_NBANK_CF_REFUSE, SL_CELL_NBANK_OTHER_BAD, 
      SL_CELL_NBANK_OTHER_OVERDUE, SL_CELL_NBANK_OTHER_FRAUD, 
      SL_CELL_NBANK_OTHER_LOST, SL_CELL_NBANK_OTHER_REFUSE, 
      SL_LM_CELL_ABNORMAL, SL_LM_CELL_PHONE_OVERDUE, 
      SL_LM_CELL_BANK_BAD, SL_LM_CELL_BANK_OVERDUE, SL_LM_CELL_BANK_FRAUD, 
      SL_LM_CELL_BANK_LOST, SL_LM_CELL_BANK_REFUSE, SL_LM_CELL_NBANK_P2P_BAD, 
      SL_LM_CELL_NBANK_P2P_OVERDUE, SL_LM_CELL_NBANK_P2P_FRAUD, 
      SL_LM_CELL_NBANK_P2P_LOST, SL_LM_CELL_NBANK_P2P_REFUSE, 
      SL_LM_CELL_NBANK_MC_BAD, SL_LM_CELL_NBANK_MC_OVERDUE, 
      SL_LM_CELL_NBANK_MC_FRAUD, SL_LM_CELL_NBANK_MC_LOST, 
      SL_LM_CELL_NBANK_MC_REFUSE, SL_LM_CELL_NBANK_CA_BAD, 
      SL_LM_CELL_NBANK_CA_OVERDUE, SL_LM_CELL_NBANK_CA_FRAUD, 
      SL_LM_CELL_NBANK_CA_LOST, SL_LM_CELL_NBANK_CA_REFUSE, 
      SL_LM_CELL_NBANK_COM_BAD, SL_LM_CELL_NBANK_COM_OVERDUE, 
      SL_LM_CELL_NBANK_COM_FRAUD, SL_LM_CELL_NBANK_COM_LOST, 
      SL_LM_CELL_NBANK_COM_REFUSE, SL_LM_CELL_NBANK_CF_BAD, 
      SL_LM_CELL_NBANK_CF_OVERDUE, SL_LM_CELL_NBANK_CF_FRAUD, 
      SL_LM_CELL_NBANK_CF_LOST, SL_LM_CELL_NBANK_CF_REFUSE, 
      SL_LM_CELL_NBANK_OTHER_BAD, SL_LM_CELL_NBANK_OTHER_OVERDUE, 
      SL_LM_CELL_NBANK_OTHER_FRAUD, SL_LM_CELL_NBANK_OTHER_LOST, 
      SL_LM_CELL_NBANK_OTHER_REFUSE, INPUT_DATE, INPUT_TIME, 
      LAST_UPDATE_DATE, LAST_UPDATE_TIME, SWIFT_NUMBER, 
      CODE)
    values (#{appNo,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR}, #{cell,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{linkmanCell,jdbcType=VARCHAR}, #{timeRange,jdbcType=VARCHAR}, 
      #{flagSpeciallistC,jdbcType=VARCHAR}, #{slIdAbnormal,jdbcType=VARCHAR}, #{slIdPhoneOverdue,jdbcType=VARCHAR}, 
      #{slIdCourtBad,jdbcType=VARCHAR}, #{slIdCourtExecuted,jdbcType=VARCHAR}, #{slIdBankBad,jdbcType=VARCHAR}, 
      #{slIdBankOverdue,jdbcType=VARCHAR}, #{slIdBankFraud,jdbcType=VARCHAR}, #{slIdBankLost,jdbcType=VARCHAR}, 
      #{slIdBankRefuse,jdbcType=VARCHAR}, #{slIdP2pBad,jdbcType=VARCHAR}, #{slIdP2pOverdue,jdbcType=VARCHAR}, 
      #{slIdP2pFraud,jdbcType=VARCHAR}, #{slIdP2pLost,jdbcType=VARCHAR}, #{slIdP2pRefuse,jdbcType=VARCHAR}, 
      #{slIdNbankP2pBad,jdbcType=VARCHAR}, #{slIdNbankP2pOverdue,jdbcType=VARCHAR}, #{slIdNbankP2pFraud,jdbcType=VARCHAR}, 
      #{slIdNbankP2pLost,jdbcType=VARCHAR}, #{slIdNbankP2pRefuse,jdbcType=VARCHAR}, #{slIdNbankMcBad,jdbcType=VARCHAR}, 
      #{slIdNbankMcOverdue,jdbcType=VARCHAR}, #{slIdNbankMcFraud,jdbcType=VARCHAR}, #{slIdNbankMcLost,jdbcType=VARCHAR}, 
      #{slIdNbankMcRefuse,jdbcType=VARCHAR}, #{slIdNbankCaBad,jdbcType=VARCHAR}, #{slIdNbankCaOverdue,jdbcType=VARCHAR}, 
      #{slIdNbankCaFraud,jdbcType=VARCHAR}, #{slIdNbankCaLost,jdbcType=VARCHAR}, #{slIdNbankCaRefuse,jdbcType=VARCHAR}, 
      #{slIdNbankComBad,jdbcType=VARCHAR}, #{slIdNbankComOverdue,jdbcType=VARCHAR}, #{slIdNbankComFraud,jdbcType=VARCHAR}, 
      #{slIdNbankComLost,jdbcType=VARCHAR}, #{slIdNbankComRefuse,jdbcType=VARCHAR}, #{slIdNbankCfBad,jdbcType=VARCHAR}, 
      #{slIdNbankCfOverdue,jdbcType=VARCHAR}, #{slIdNbankCfFraud,jdbcType=VARCHAR}, #{slIdNbankCfLost,jdbcType=VARCHAR}, 
      #{slIdNbankCfRefuse,jdbcType=VARCHAR}, #{slIdNbankOtherBad,jdbcType=VARCHAR}, #{slIdNbankOtherOverdue,jdbcType=VARCHAR}, 
      #{slIdNbankOtherFraud,jdbcType=VARCHAR}, #{slIdNbankOtherLost,jdbcType=VARCHAR}, 
      #{slIdNbankOtherRefuse,jdbcType=VARCHAR}, #{slCellAbnormal,jdbcType=VARCHAR}, #{slCellPhoneOverdue,jdbcType=VARCHAR}, 
      #{slCellBankBad,jdbcType=VARCHAR}, #{slCellBankOverdue,jdbcType=VARCHAR}, #{slCellBankFraud,jdbcType=VARCHAR}, 
      #{slCellBankLost,jdbcType=VARCHAR}, #{slCellBankRefuse,jdbcType=VARCHAR}, #{slCellP2pBad,jdbcType=VARCHAR}, 
      #{slCellP2pOverdue,jdbcType=VARCHAR}, #{slCellP2pFraud,jdbcType=VARCHAR}, #{slCellP2pLost,jdbcType=VARCHAR}, 
      #{slCellP2pRefuse,jdbcType=VARCHAR}, #{slCellNbankP2pBad,jdbcType=VARCHAR}, #{slCellNbankP2pOverdue,jdbcType=VARCHAR}, 
      #{slCellNbankP2pFraud,jdbcType=VARCHAR}, #{slCellNbankP2pLost,jdbcType=VARCHAR}, 
      #{slCellNbankP2pRefuse,jdbcType=VARCHAR}, #{slCellNbankMcBad,jdbcType=VARCHAR}, 
      #{slCellNbankMcOverdue,jdbcType=VARCHAR}, #{slCellNbankMcFraud,jdbcType=VARCHAR}, 
      #{slCellNbankMcLost,jdbcType=VARCHAR}, #{slCellNbankMcRefuse,jdbcType=VARCHAR}, 
      #{slCellNbankCaBad,jdbcType=VARCHAR}, #{slCellNbankCaOverdue,jdbcType=VARCHAR}, 
      #{slCellNbankCaFraud,jdbcType=VARCHAR}, #{slCellNbankCaLost,jdbcType=VARCHAR}, 
      #{slCellNbankCaRefuse,jdbcType=VARCHAR}, #{slCellNbankComBad,jdbcType=VARCHAR}, 
      #{slCellNbankComOverdue,jdbcType=VARCHAR}, #{slCellNbankComFraud,jdbcType=VARCHAR}, 
      #{slCellNbankComLost,jdbcType=VARCHAR}, #{slCellNbankComRefuse,jdbcType=VARCHAR}, 
      #{slCellNbankCfBad,jdbcType=VARCHAR}, #{slCellNbankCfOverdue,jdbcType=VARCHAR}, 
      #{slCellNbankCfFraud,jdbcType=VARCHAR}, #{slCellNbankCfLost,jdbcType=VARCHAR}, 
      #{slCellNbankCfRefuse,jdbcType=VARCHAR}, #{slCellNbankOtherBad,jdbcType=VARCHAR}, 
      #{slCellNbankOtherOverdue,jdbcType=VARCHAR}, #{slCellNbankOtherFraud,jdbcType=VARCHAR}, 
      #{slCellNbankOtherLost,jdbcType=VARCHAR}, #{slCellNbankOtherRefuse,jdbcType=VARCHAR}, 
      #{slLmCellAbnormal,jdbcType=VARCHAR}, #{slLmCellPhoneOverdue,jdbcType=VARCHAR}, 
      #{slLmCellBankBad,jdbcType=VARCHAR}, #{slLmCellBankOverdue,jdbcType=VARCHAR}, #{slLmCellBankFraud,jdbcType=VARCHAR}, 
      #{slLmCellBankLost,jdbcType=VARCHAR}, #{slLmCellBankRefuse,jdbcType=VARCHAR}, #{slLmCellNbankP2pBad,jdbcType=VARCHAR}, 
      #{slLmCellNbankP2pOverdue,jdbcType=VARCHAR}, #{slLmCellNbankP2pFraud,jdbcType=VARCHAR}, 
      #{slLmCellNbankP2pLost,jdbcType=VARCHAR}, #{slLmCellNbankP2pRefuse,jdbcType=VARCHAR}, 
      #{slLmCellNbankMcBad,jdbcType=VARCHAR}, #{slLmCellNbankMcOverdue,jdbcType=VARCHAR}, 
      #{slLmCellNbankMcFraud,jdbcType=VARCHAR}, #{slLmCellNbankMcLost,jdbcType=VARCHAR}, 
      #{slLmCellNbankMcRefuse,jdbcType=VARCHAR}, #{slLmCellNbankCaBad,jdbcType=VARCHAR}, 
      #{slLmCellNbankCaOverdue,jdbcType=VARCHAR}, #{slLmCellNbankCaFraud,jdbcType=VARCHAR}, 
      #{slLmCellNbankCaLost,jdbcType=VARCHAR}, #{slLmCellNbankCaRefuse,jdbcType=VARCHAR}, 
      #{slLmCellNbankComBad,jdbcType=VARCHAR}, #{slLmCellNbankComOverdue,jdbcType=VARCHAR}, 
      #{slLmCellNbankComFraud,jdbcType=VARCHAR}, #{slLmCellNbankComLost,jdbcType=VARCHAR}, 
      #{slLmCellNbankComRefuse,jdbcType=VARCHAR}, #{slLmCellNbankCfBad,jdbcType=VARCHAR}, 
      #{slLmCellNbankCfOverdue,jdbcType=VARCHAR}, #{slLmCellNbankCfFraud,jdbcType=VARCHAR}, 
      #{slLmCellNbankCfLost,jdbcType=VARCHAR}, #{slLmCellNbankCfRefuse,jdbcType=VARCHAR}, 
      #{slLmCellNbankOtherBad,jdbcType=VARCHAR}, #{slLmCellNbankOtherOverdue,jdbcType=VARCHAR}, 
      #{slLmCellNbankOtherFraud,jdbcType=VARCHAR}, #{slLmCellNbankOtherLost,jdbcType=VARCHAR}, 
      #{slLmCellNbankOtherRefuse,jdbcType=VARCHAR}, #{inputDate,jdbcType=VARCHAR}, #{inputTime,jdbcType=VARCHAR}, 
      #{lastUpdateDate,jdbcType=VARCHAR}, #{lastUpdateTime,jdbcType=VARCHAR}, #{swiftNumber,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bea.olp.BIZ_BR_SPECIALLIST_C">
    insert into BIZ_BR_SPECIALLIST_C
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appNo != null">
        APP_NO,
      </if>
      <if test="id != null">
        ID,
      </if>
      <if test="cell != null">
        CELL,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="linkmanCell != null">
        LINKMAN_CELL,
      </if>
      <if test="timeRange != null">
        TIME_RANGE,
      </if>
      <if test="flagSpeciallistC != null">
        FLAG_SPECIALLIST_C,
      </if>
      <if test="slIdAbnormal != null">
        SL_ID_ABNORMAL,
      </if>
      <if test="slIdPhoneOverdue != null">
        SL_ID_PHONE_OVERDUE,
      </if>
      <if test="slIdCourtBad != null">
        SL_ID_COURT_BAD,
      </if>
      <if test="slIdCourtExecuted != null">
        SL_ID_COURT_EXECUTED,
      </if>
      <if test="slIdBankBad != null">
        SL_ID_BANK_BAD,
      </if>
      <if test="slIdBankOverdue != null">
        SL_ID_BANK_OVERDUE,
      </if>
      <if test="slIdBankFraud != null">
        SL_ID_BANK_FRAUD,
      </if>
      <if test="slIdBankLost != null">
        SL_ID_BANK_LOST,
      </if>
      <if test="slIdBankRefuse != null">
        SL_ID_BANK_REFUSE,
      </if>
      <if test="slIdP2pBad != null">
        SL_ID_P2P_BAD,
      </if>
      <if test="slIdP2pOverdue != null">
        SL_ID_P2P_OVERDUE,
      </if>
      <if test="slIdP2pFraud != null">
        SL_ID_P2P_FRAUD,
      </if>
      <if test="slIdP2pLost != null">
        SL_ID_P2P_LOST,
      </if>
      <if test="slIdP2pRefuse != null">
        SL_ID_P2P_REFUSE,
      </if>
      <if test="slIdNbankP2pBad != null">
        SL_ID_NBANK_P2P_BAD,
      </if>
      <if test="slIdNbankP2pOverdue != null">
        SL_ID_NBANK_P2P_OVERDUE,
      </if>
      <if test="slIdNbankP2pFraud != null">
        SL_ID_NBANK_P2P_FRAUD,
      </if>
      <if test="slIdNbankP2pLost != null">
        SL_ID_NBANK_P2P_LOST,
      </if>
      <if test="slIdNbankP2pRefuse != null">
        SL_ID_NBANK_P2P_REFUSE,
      </if>
      <if test="slIdNbankMcBad != null">
        SL_ID_NBANK_MC_BAD,
      </if>
      <if test="slIdNbankMcOverdue != null">
        SL_ID_NBANK_MC_OVERDUE,
      </if>
      <if test="slIdNbankMcFraud != null">
        SL_ID_NBANK_MC_FRAUD,
      </if>
      <if test="slIdNbankMcLost != null">
        SL_ID_NBANK_MC_LOST,
      </if>
      <if test="slIdNbankMcRefuse != null">
        SL_ID_NBANK_MC_REFUSE,
      </if>
      <if test="slIdNbankCaBad != null">
        SL_ID_NBANK_CA_BAD,
      </if>
      <if test="slIdNbankCaOverdue != null">
        SL_ID_NBANK_CA_OVERDUE,
      </if>
      <if test="slIdNbankCaFraud != null">
        SL_ID_NBANK_CA_FRAUD,
      </if>
      <if test="slIdNbankCaLost != null">
        SL_ID_NBANK_CA_LOST,
      </if>
      <if test="slIdNbankCaRefuse != null">
        SL_ID_NBANK_CA_REFUSE,
      </if>
      <if test="slIdNbankComBad != null">
        SL_ID_NBANK_COM_BAD,
      </if>
      <if test="slIdNbankComOverdue != null">
        SL_ID_NBANK_COM_OVERDUE,
      </if>
      <if test="slIdNbankComFraud != null">
        SL_ID_NBANK_COM_FRAUD,
      </if>
      <if test="slIdNbankComLost != null">
        SL_ID_NBANK_COM_LOST,
      </if>
      <if test="slIdNbankComRefuse != null">
        SL_ID_NBANK_COM_REFUSE,
      </if>
      <if test="slIdNbankCfBad != null">
        SL_ID_NBANK_CF_BAD,
      </if>
      <if test="slIdNbankCfOverdue != null">
        SL_ID_NBANK_CF_OVERDUE,
      </if>
      <if test="slIdNbankCfFraud != null">
        SL_ID_NBANK_CF_FRAUD,
      </if>
      <if test="slIdNbankCfLost != null">
        SL_ID_NBANK_CF_LOST,
      </if>
      <if test="slIdNbankCfRefuse != null">
        SL_ID_NBANK_CF_REFUSE,
      </if>
      <if test="slIdNbankOtherBad != null">
        SL_ID_NBANK_OTHER_BAD,
      </if>
      <if test="slIdNbankOtherOverdue != null">
        SL_ID_NBANK_OTHER_OVERDUE,
      </if>
      <if test="slIdNbankOtherFraud != null">
        SL_ID_NBANK_OTHER_FRAUD,
      </if>
      <if test="slIdNbankOtherLost != null">
        SL_ID_NBANK_OTHER_LOST,
      </if>
      <if test="slIdNbankOtherRefuse != null">
        SL_ID_NBANK_OTHER_REFUSE,
      </if>
      <if test="slCellAbnormal != null">
        SL_CELL_ABNORMAL,
      </if>
      <if test="slCellPhoneOverdue != null">
        SL_CELL_PHONE_OVERDUE,
      </if>
      <if test="slCellBankBad != null">
        SL_CELL_BANK_BAD,
      </if>
      <if test="slCellBankOverdue != null">
        SL_CELL_BANK_OVERDUE,
      </if>
      <if test="slCellBankFraud != null">
        SL_CELL_BANK_FRAUD,
      </if>
      <if test="slCellBankLost != null">
        SL_CELL_BANK_LOST,
      </if>
      <if test="slCellBankRefuse != null">
        SL_CELL_BANK_REFUSE,
      </if>
      <if test="slCellP2pBad != null">
        SL_CELL_P2P_BAD,
      </if>
      <if test="slCellP2pOverdue != null">
        SL_CELL_P2P_OVERDUE,
      </if>
      <if test="slCellP2pFraud != null">
        SL_CELL_P2P_FRAUD,
      </if>
      <if test="slCellP2pLost != null">
        SL_CELL_P2P_LOST,
      </if>
      <if test="slCellP2pRefuse != null">
        SL_CELL_P2P_REFUSE,
      </if>
      <if test="slCellNbankP2pBad != null">
        SL_CELL_NBANK_P2P_BAD,
      </if>
      <if test="slCellNbankP2pOverdue != null">
        SL_CELL_NBANK_P2P_OVERDUE,
      </if>
      <if test="slCellNbankP2pFraud != null">
        SL_CELL_NBANK_P2P_FRAUD,
      </if>
      <if test="slCellNbankP2pLost != null">
        SL_CELL_NBANK_P2P_LOST,
      </if>
      <if test="slCellNbankP2pRefuse != null">
        SL_CELL_NBANK_P2P_REFUSE,
      </if>
      <if test="slCellNbankMcBad != null">
        SL_CELL_NBANK_MC_BAD,
      </if>
      <if test="slCellNbankMcOverdue != null">
        SL_CELL_NBANK_MC_OVERDUE,
      </if>
      <if test="slCellNbankMcFraud != null">
        SL_CELL_NBANK_MC_FRAUD,
      </if>
      <if test="slCellNbankMcLost != null">
        SL_CELL_NBANK_MC_LOST,
      </if>
      <if test="slCellNbankMcRefuse != null">
        SL_CELL_NBANK_MC_REFUSE,
      </if>
      <if test="slCellNbankCaBad != null">
        SL_CELL_NBANK_CA_BAD,
      </if>
      <if test="slCellNbankCaOverdue != null">
        SL_CELL_NBANK_CA_OVERDUE,
      </if>
      <if test="slCellNbankCaFraud != null">
        SL_CELL_NBANK_CA_FRAUD,
      </if>
      <if test="slCellNbankCaLost != null">
        SL_CELL_NBANK_CA_LOST,
      </if>
      <if test="slCellNbankCaRefuse != null">
        SL_CELL_NBANK_CA_REFUSE,
      </if>
      <if test="slCellNbankComBad != null">
        SL_CELL_NBANK_COM_BAD,
      </if>
      <if test="slCellNbankComOverdue != null">
        SL_CELL_NBANK_COM_OVERDUE,
      </if>
      <if test="slCellNbankComFraud != null">
        SL_CELL_NBANK_COM_FRAUD,
      </if>
      <if test="slCellNbankComLost != null">
        SL_CELL_NBANK_COM_LOST,
      </if>
      <if test="slCellNbankComRefuse != null">
        SL_CELL_NBANK_COM_REFUSE,
      </if>
      <if test="slCellNbankCfBad != null">
        SL_CELL_NBANK_CF_BAD,
      </if>
      <if test="slCellNbankCfOverdue != null">
        SL_CELL_NBANK_CF_OVERDUE,
      </if>
      <if test="slCellNbankCfFraud != null">
        SL_CELL_NBANK_CF_FRAUD,
      </if>
      <if test="slCellNbankCfLost != null">
        SL_CELL_NBANK_CF_LOST,
      </if>
      <if test="slCellNbankCfRefuse != null">
        SL_CELL_NBANK_CF_REFUSE,
      </if>
      <if test="slCellNbankOtherBad != null">
        SL_CELL_NBANK_OTHER_BAD,
      </if>
      <if test="slCellNbankOtherOverdue != null">
        SL_CELL_NBANK_OTHER_OVERDUE,
      </if>
      <if test="slCellNbankOtherFraud != null">
        SL_CELL_NBANK_OTHER_FRAUD,
      </if>
      <if test="slCellNbankOtherLost != null">
        SL_CELL_NBANK_OTHER_LOST,
      </if>
      <if test="slCellNbankOtherRefuse != null">
        SL_CELL_NBANK_OTHER_REFUSE,
      </if>
      <if test="slLmCellAbnormal != null">
        SL_LM_CELL_ABNORMAL,
      </if>
      <if test="slLmCellPhoneOverdue != null">
        SL_LM_CELL_PHONE_OVERDUE,
      </if>
      <if test="slLmCellBankBad != null">
        SL_LM_CELL_BANK_BAD,
      </if>
      <if test="slLmCellBankOverdue != null">
        SL_LM_CELL_BANK_OVERDUE,
      </if>
      <if test="slLmCellBankFraud != null">
        SL_LM_CELL_BANK_FRAUD,
      </if>
      <if test="slLmCellBankLost != null">
        SL_LM_CELL_BANK_LOST,
      </if>
      <if test="slLmCellBankRefuse != null">
        SL_LM_CELL_BANK_REFUSE,
      </if>
      <if test="slLmCellNbankP2pBad != null">
        SL_LM_CELL_NBANK_P2P_BAD,
      </if>
      <if test="slLmCellNbankP2pOverdue != null">
        SL_LM_CELL_NBANK_P2P_OVERDUE,
      </if>
      <if test="slLmCellNbankP2pFraud != null">
        SL_LM_CELL_NBANK_P2P_FRAUD,
      </if>
      <if test="slLmCellNbankP2pLost != null">
        SL_LM_CELL_NBANK_P2P_LOST,
      </if>
      <if test="slLmCellNbankP2pRefuse != null">
        SL_LM_CELL_NBANK_P2P_REFUSE,
      </if>
      <if test="slLmCellNbankMcBad != null">
        SL_LM_CELL_NBANK_MC_BAD,
      </if>
      <if test="slLmCellNbankMcOverdue != null">
        SL_LM_CELL_NBANK_MC_OVERDUE,
      </if>
      <if test="slLmCellNbankMcFraud != null">
        SL_LM_CELL_NBANK_MC_FRAUD,
      </if>
      <if test="slLmCellNbankMcLost != null">
        SL_LM_CELL_NBANK_MC_LOST,
      </if>
      <if test="slLmCellNbankMcRefuse != null">
        SL_LM_CELL_NBANK_MC_REFUSE,
      </if>
      <if test="slLmCellNbankCaBad != null">
        SL_LM_CELL_NBANK_CA_BAD,
      </if>
      <if test="slLmCellNbankCaOverdue != null">
        SL_LM_CELL_NBANK_CA_OVERDUE,
      </if>
      <if test="slLmCellNbankCaFraud != null">
        SL_LM_CELL_NBANK_CA_FRAUD,
      </if>
      <if test="slLmCellNbankCaLost != null">
        SL_LM_CELL_NBANK_CA_LOST,
      </if>
      <if test="slLmCellNbankCaRefuse != null">
        SL_LM_CELL_NBANK_CA_REFUSE,
      </if>
      <if test="slLmCellNbankComBad != null">
        SL_LM_CELL_NBANK_COM_BAD,
      </if>
      <if test="slLmCellNbankComOverdue != null">
        SL_LM_CELL_NBANK_COM_OVERDUE,
      </if>
      <if test="slLmCellNbankComFraud != null">
        SL_LM_CELL_NBANK_COM_FRAUD,
      </if>
      <if test="slLmCellNbankComLost != null">
        SL_LM_CELL_NBANK_COM_LOST,
      </if>
      <if test="slLmCellNbankComRefuse != null">
        SL_LM_CELL_NBANK_COM_REFUSE,
      </if>
      <if test="slLmCellNbankCfBad != null">
        SL_LM_CELL_NBANK_CF_BAD,
      </if>
      <if test="slLmCellNbankCfOverdue != null">
        SL_LM_CELL_NBANK_CF_OVERDUE,
      </if>
      <if test="slLmCellNbankCfFraud != null">
        SL_LM_CELL_NBANK_CF_FRAUD,
      </if>
      <if test="slLmCellNbankCfLost != null">
        SL_LM_CELL_NBANK_CF_LOST,
      </if>
      <if test="slLmCellNbankCfRefuse != null">
        SL_LM_CELL_NBANK_CF_REFUSE,
      </if>
      <if test="slLmCellNbankOtherBad != null">
        SL_LM_CELL_NBANK_OTHER_BAD,
      </if>
      <if test="slLmCellNbankOtherOverdue != null">
        SL_LM_CELL_NBANK_OTHER_OVERDUE,
      </if>
      <if test="slLmCellNbankOtherFraud != null">
        SL_LM_CELL_NBANK_OTHER_FRAUD,
      </if>
      <if test="slLmCellNbankOtherLost != null">
        SL_LM_CELL_NBANK_OTHER_LOST,
      </if>
      <if test="slLmCellNbankOtherRefuse != null">
        SL_LM_CELL_NBANK_OTHER_REFUSE,
      </if>
      <if test="inputDate != null">
        INPUT_DATE,
      </if>
      <if test="inputTime != null">
        INPUT_TIME,
      </if>
      <if test="lastUpdateDate != null">
        LAST_UPDATE_DATE,
      </if>
      <if test="lastUpdateTime != null">
        LAST_UPDATE_TIME,
      </if>
      <if test="swiftNumber != null">
        SWIFT_NUMBER,
      </if>
      <if test="code != null">
        CODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appNo != null">
        #{appNo,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="cell != null">
        #{cell,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="linkmanCell != null">
        #{linkmanCell,jdbcType=VARCHAR},
      </if>
      <if test="timeRange != null">
        #{timeRange,jdbcType=VARCHAR},
      </if>
      <if test="flagSpeciallistC != null">
        #{flagSpeciallistC,jdbcType=VARCHAR},
      </if>
      <if test="slIdAbnormal != null">
        #{slIdAbnormal,jdbcType=VARCHAR},
      </if>
      <if test="slIdPhoneOverdue != null">
        #{slIdPhoneOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdCourtBad != null">
        #{slIdCourtBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdCourtExecuted != null">
        #{slIdCourtExecuted,jdbcType=VARCHAR},
      </if>
      <if test="slIdBankBad != null">
        #{slIdBankBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdBankOverdue != null">
        #{slIdBankOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdBankFraud != null">
        #{slIdBankFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdBankLost != null">
        #{slIdBankLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdBankRefuse != null">
        #{slIdBankRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdP2pBad != null">
        #{slIdP2pBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdP2pOverdue != null">
        #{slIdP2pOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdP2pFraud != null">
        #{slIdP2pFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdP2pLost != null">
        #{slIdP2pLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdP2pRefuse != null">
        #{slIdP2pRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankP2pBad != null">
        #{slIdNbankP2pBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankP2pOverdue != null">
        #{slIdNbankP2pOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankP2pFraud != null">
        #{slIdNbankP2pFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankP2pLost != null">
        #{slIdNbankP2pLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankP2pRefuse != null">
        #{slIdNbankP2pRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankMcBad != null">
        #{slIdNbankMcBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankMcOverdue != null">
        #{slIdNbankMcOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankMcFraud != null">
        #{slIdNbankMcFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankMcLost != null">
        #{slIdNbankMcLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankMcRefuse != null">
        #{slIdNbankMcRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCaBad != null">
        #{slIdNbankCaBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCaOverdue != null">
        #{slIdNbankCaOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCaFraud != null">
        #{slIdNbankCaFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCaLost != null">
        #{slIdNbankCaLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCaRefuse != null">
        #{slIdNbankCaRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankComBad != null">
        #{slIdNbankComBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankComOverdue != null">
        #{slIdNbankComOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankComFraud != null">
        #{slIdNbankComFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankComLost != null">
        #{slIdNbankComLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankComRefuse != null">
        #{slIdNbankComRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCfBad != null">
        #{slIdNbankCfBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCfOverdue != null">
        #{slIdNbankCfOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCfFraud != null">
        #{slIdNbankCfFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCfLost != null">
        #{slIdNbankCfLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCfRefuse != null">
        #{slIdNbankCfRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankOtherBad != null">
        #{slIdNbankOtherBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankOtherOverdue != null">
        #{slIdNbankOtherOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankOtherFraud != null">
        #{slIdNbankOtherFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankOtherLost != null">
        #{slIdNbankOtherLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankOtherRefuse != null">
        #{slIdNbankOtherRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellAbnormal != null">
        #{slCellAbnormal,jdbcType=VARCHAR},
      </if>
      <if test="slCellPhoneOverdue != null">
        #{slCellPhoneOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellBankBad != null">
        #{slCellBankBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellBankOverdue != null">
        #{slCellBankOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellBankFraud != null">
        #{slCellBankFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellBankLost != null">
        #{slCellBankLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellBankRefuse != null">
        #{slCellBankRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellP2pBad != null">
        #{slCellP2pBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellP2pOverdue != null">
        #{slCellP2pOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellP2pFraud != null">
        #{slCellP2pFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellP2pLost != null">
        #{slCellP2pLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellP2pRefuse != null">
        #{slCellP2pRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankP2pBad != null">
        #{slCellNbankP2pBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankP2pOverdue != null">
        #{slCellNbankP2pOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankP2pFraud != null">
        #{slCellNbankP2pFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankP2pLost != null">
        #{slCellNbankP2pLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankP2pRefuse != null">
        #{slCellNbankP2pRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankMcBad != null">
        #{slCellNbankMcBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankMcOverdue != null">
        #{slCellNbankMcOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankMcFraud != null">
        #{slCellNbankMcFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankMcLost != null">
        #{slCellNbankMcLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankMcRefuse != null">
        #{slCellNbankMcRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCaBad != null">
        #{slCellNbankCaBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCaOverdue != null">
        #{slCellNbankCaOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCaFraud != null">
        #{slCellNbankCaFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCaLost != null">
        #{slCellNbankCaLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCaRefuse != null">
        #{slCellNbankCaRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankComBad != null">
        #{slCellNbankComBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankComOverdue != null">
        #{slCellNbankComOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankComFraud != null">
        #{slCellNbankComFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankComLost != null">
        #{slCellNbankComLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankComRefuse != null">
        #{slCellNbankComRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCfBad != null">
        #{slCellNbankCfBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCfOverdue != null">
        #{slCellNbankCfOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCfFraud != null">
        #{slCellNbankCfFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCfLost != null">
        #{slCellNbankCfLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCfRefuse != null">
        #{slCellNbankCfRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankOtherBad != null">
        #{slCellNbankOtherBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankOtherOverdue != null">
        #{slCellNbankOtherOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankOtherFraud != null">
        #{slCellNbankOtherFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankOtherLost != null">
        #{slCellNbankOtherLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankOtherRefuse != null">
        #{slCellNbankOtherRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellAbnormal != null">
        #{slLmCellAbnormal,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellPhoneOverdue != null">
        #{slLmCellPhoneOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellBankBad != null">
        #{slLmCellBankBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellBankOverdue != null">
        #{slLmCellBankOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellBankFraud != null">
        #{slLmCellBankFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellBankLost != null">
        #{slLmCellBankLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellBankRefuse != null">
        #{slLmCellBankRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankP2pBad != null">
        #{slLmCellNbankP2pBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankP2pOverdue != null">
        #{slLmCellNbankP2pOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankP2pFraud != null">
        #{slLmCellNbankP2pFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankP2pLost != null">
        #{slLmCellNbankP2pLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankP2pRefuse != null">
        #{slLmCellNbankP2pRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankMcBad != null">
        #{slLmCellNbankMcBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankMcOverdue != null">
        #{slLmCellNbankMcOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankMcFraud != null">
        #{slLmCellNbankMcFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankMcLost != null">
        #{slLmCellNbankMcLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankMcRefuse != null">
        #{slLmCellNbankMcRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCaBad != null">
        #{slLmCellNbankCaBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCaOverdue != null">
        #{slLmCellNbankCaOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCaFraud != null">
        #{slLmCellNbankCaFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCaLost != null">
        #{slLmCellNbankCaLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCaRefuse != null">
        #{slLmCellNbankCaRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankComBad != null">
        #{slLmCellNbankComBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankComOverdue != null">
        #{slLmCellNbankComOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankComFraud != null">
        #{slLmCellNbankComFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankComLost != null">
        #{slLmCellNbankComLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankComRefuse != null">
        #{slLmCellNbankComRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCfBad != null">
        #{slLmCellNbankCfBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCfOverdue != null">
        #{slLmCellNbankCfOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCfFraud != null">
        #{slLmCellNbankCfFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCfLost != null">
        #{slLmCellNbankCfLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCfRefuse != null">
        #{slLmCellNbankCfRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankOtherBad != null">
        #{slLmCellNbankOtherBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankOtherOverdue != null">
        #{slLmCellNbankOtherOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankOtherFraud != null">
        #{slLmCellNbankOtherFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankOtherLost != null">
        #{slLmCellNbankOtherLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankOtherRefuse != null">
        #{slLmCellNbankOtherRefuse,jdbcType=VARCHAR},
      </if>
      <if test="inputDate != null">
        #{inputDate,jdbcType=VARCHAR},
      </if>
      <if test="inputTime != null">
        #{inputTime,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateDate != null">
        #{lastUpdateDate,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=VARCHAR},
      </if>
      <if test="swiftNumber != null">
        #{swiftNumber,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bea.olp.BIZ_BR_SPECIALLIST_C">
    update BIZ_BR_SPECIALLIST_C
    <set>
      <if test="id != null">
        ID = #{id,jdbcType=VARCHAR},
      </if>
      <if test="cell != null">
        CELL = #{cell,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="linkmanCell != null">
        LINKMAN_CELL = #{linkmanCell,jdbcType=VARCHAR},
      </if>
      <if test="timeRange != null">
        TIME_RANGE = #{timeRange,jdbcType=VARCHAR},
      </if>
      <if test="flagSpeciallistC != null">
        FLAG_SPECIALLIST_C = #{flagSpeciallistC,jdbcType=VARCHAR},
      </if>
      <if test="slIdAbnormal != null">
        SL_ID_ABNORMAL = #{slIdAbnormal,jdbcType=VARCHAR},
      </if>
      <if test="slIdPhoneOverdue != null">
        SL_ID_PHONE_OVERDUE = #{slIdPhoneOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdCourtBad != null">
        SL_ID_COURT_BAD = #{slIdCourtBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdCourtExecuted != null">
        SL_ID_COURT_EXECUTED = #{slIdCourtExecuted,jdbcType=VARCHAR},
      </if>
      <if test="slIdBankBad != null">
        SL_ID_BANK_BAD = #{slIdBankBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdBankOverdue != null">
        SL_ID_BANK_OVERDUE = #{slIdBankOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdBankFraud != null">
        SL_ID_BANK_FRAUD = #{slIdBankFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdBankLost != null">
        SL_ID_BANK_LOST = #{slIdBankLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdBankRefuse != null">
        SL_ID_BANK_REFUSE = #{slIdBankRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdP2pBad != null">
        SL_ID_P2P_BAD = #{slIdP2pBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdP2pOverdue != null">
        SL_ID_P2P_OVERDUE = #{slIdP2pOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdP2pFraud != null">
        SL_ID_P2P_FRAUD = #{slIdP2pFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdP2pLost != null">
        SL_ID_P2P_LOST = #{slIdP2pLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdP2pRefuse != null">
        SL_ID_P2P_REFUSE = #{slIdP2pRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankP2pBad != null">
        SL_ID_NBANK_P2P_BAD = #{slIdNbankP2pBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankP2pOverdue != null">
        SL_ID_NBANK_P2P_OVERDUE = #{slIdNbankP2pOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankP2pFraud != null">
        SL_ID_NBANK_P2P_FRAUD = #{slIdNbankP2pFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankP2pLost != null">
        SL_ID_NBANK_P2P_LOST = #{slIdNbankP2pLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankP2pRefuse != null">
        SL_ID_NBANK_P2P_REFUSE = #{slIdNbankP2pRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankMcBad != null">
        SL_ID_NBANK_MC_BAD = #{slIdNbankMcBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankMcOverdue != null">
        SL_ID_NBANK_MC_OVERDUE = #{slIdNbankMcOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankMcFraud != null">
        SL_ID_NBANK_MC_FRAUD = #{slIdNbankMcFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankMcLost != null">
        SL_ID_NBANK_MC_LOST = #{slIdNbankMcLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankMcRefuse != null">
        SL_ID_NBANK_MC_REFUSE = #{slIdNbankMcRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCaBad != null">
        SL_ID_NBANK_CA_BAD = #{slIdNbankCaBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCaOverdue != null">
        SL_ID_NBANK_CA_OVERDUE = #{slIdNbankCaOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCaFraud != null">
        SL_ID_NBANK_CA_FRAUD = #{slIdNbankCaFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCaLost != null">
        SL_ID_NBANK_CA_LOST = #{slIdNbankCaLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCaRefuse != null">
        SL_ID_NBANK_CA_REFUSE = #{slIdNbankCaRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankComBad != null">
        SL_ID_NBANK_COM_BAD = #{slIdNbankComBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankComOverdue != null">
        SL_ID_NBANK_COM_OVERDUE = #{slIdNbankComOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankComFraud != null">
        SL_ID_NBANK_COM_FRAUD = #{slIdNbankComFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankComLost != null">
        SL_ID_NBANK_COM_LOST = #{slIdNbankComLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankComRefuse != null">
        SL_ID_NBANK_COM_REFUSE = #{slIdNbankComRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCfBad != null">
        SL_ID_NBANK_CF_BAD = #{slIdNbankCfBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCfOverdue != null">
        SL_ID_NBANK_CF_OVERDUE = #{slIdNbankCfOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCfFraud != null">
        SL_ID_NBANK_CF_FRAUD = #{slIdNbankCfFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCfLost != null">
        SL_ID_NBANK_CF_LOST = #{slIdNbankCfLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankCfRefuse != null">
        SL_ID_NBANK_CF_REFUSE = #{slIdNbankCfRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankOtherBad != null">
        SL_ID_NBANK_OTHER_BAD = #{slIdNbankOtherBad,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankOtherOverdue != null">
        SL_ID_NBANK_OTHER_OVERDUE = #{slIdNbankOtherOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankOtherFraud != null">
        SL_ID_NBANK_OTHER_FRAUD = #{slIdNbankOtherFraud,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankOtherLost != null">
        SL_ID_NBANK_OTHER_LOST = #{slIdNbankOtherLost,jdbcType=VARCHAR},
      </if>
      <if test="slIdNbankOtherRefuse != null">
        SL_ID_NBANK_OTHER_REFUSE = #{slIdNbankOtherRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellAbnormal != null">
        SL_CELL_ABNORMAL = #{slCellAbnormal,jdbcType=VARCHAR},
      </if>
      <if test="slCellPhoneOverdue != null">
        SL_CELL_PHONE_OVERDUE = #{slCellPhoneOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellBankBad != null">
        SL_CELL_BANK_BAD = #{slCellBankBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellBankOverdue != null">
        SL_CELL_BANK_OVERDUE = #{slCellBankOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellBankFraud != null">
        SL_CELL_BANK_FRAUD = #{slCellBankFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellBankLost != null">
        SL_CELL_BANK_LOST = #{slCellBankLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellBankRefuse != null">
        SL_CELL_BANK_REFUSE = #{slCellBankRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellP2pBad != null">
        SL_CELL_P2P_BAD = #{slCellP2pBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellP2pOverdue != null">
        SL_CELL_P2P_OVERDUE = #{slCellP2pOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellP2pFraud != null">
        SL_CELL_P2P_FRAUD = #{slCellP2pFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellP2pLost != null">
        SL_CELL_P2P_LOST = #{slCellP2pLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellP2pRefuse != null">
        SL_CELL_P2P_REFUSE = #{slCellP2pRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankP2pBad != null">
        SL_CELL_NBANK_P2P_BAD = #{slCellNbankP2pBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankP2pOverdue != null">
        SL_CELL_NBANK_P2P_OVERDUE = #{slCellNbankP2pOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankP2pFraud != null">
        SL_CELL_NBANK_P2P_FRAUD = #{slCellNbankP2pFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankP2pLost != null">
        SL_CELL_NBANK_P2P_LOST = #{slCellNbankP2pLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankP2pRefuse != null">
        SL_CELL_NBANK_P2P_REFUSE = #{slCellNbankP2pRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankMcBad != null">
        SL_CELL_NBANK_MC_BAD = #{slCellNbankMcBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankMcOverdue != null">
        SL_CELL_NBANK_MC_OVERDUE = #{slCellNbankMcOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankMcFraud != null">
        SL_CELL_NBANK_MC_FRAUD = #{slCellNbankMcFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankMcLost != null">
        SL_CELL_NBANK_MC_LOST = #{slCellNbankMcLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankMcRefuse != null">
        SL_CELL_NBANK_MC_REFUSE = #{slCellNbankMcRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCaBad != null">
        SL_CELL_NBANK_CA_BAD = #{slCellNbankCaBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCaOverdue != null">
        SL_CELL_NBANK_CA_OVERDUE = #{slCellNbankCaOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCaFraud != null">
        SL_CELL_NBANK_CA_FRAUD = #{slCellNbankCaFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCaLost != null">
        SL_CELL_NBANK_CA_LOST = #{slCellNbankCaLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCaRefuse != null">
        SL_CELL_NBANK_CA_REFUSE = #{slCellNbankCaRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankComBad != null">
        SL_CELL_NBANK_COM_BAD = #{slCellNbankComBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankComOverdue != null">
        SL_CELL_NBANK_COM_OVERDUE = #{slCellNbankComOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankComFraud != null">
        SL_CELL_NBANK_COM_FRAUD = #{slCellNbankComFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankComLost != null">
        SL_CELL_NBANK_COM_LOST = #{slCellNbankComLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankComRefuse != null">
        SL_CELL_NBANK_COM_REFUSE = #{slCellNbankComRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCfBad != null">
        SL_CELL_NBANK_CF_BAD = #{slCellNbankCfBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCfOverdue != null">
        SL_CELL_NBANK_CF_OVERDUE = #{slCellNbankCfOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCfFraud != null">
        SL_CELL_NBANK_CF_FRAUD = #{slCellNbankCfFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCfLost != null">
        SL_CELL_NBANK_CF_LOST = #{slCellNbankCfLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankCfRefuse != null">
        SL_CELL_NBANK_CF_REFUSE = #{slCellNbankCfRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankOtherBad != null">
        SL_CELL_NBANK_OTHER_BAD = #{slCellNbankOtherBad,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankOtherOverdue != null">
        SL_CELL_NBANK_OTHER_OVERDUE = #{slCellNbankOtherOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankOtherFraud != null">
        SL_CELL_NBANK_OTHER_FRAUD = #{slCellNbankOtherFraud,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankOtherLost != null">
        SL_CELL_NBANK_OTHER_LOST = #{slCellNbankOtherLost,jdbcType=VARCHAR},
      </if>
      <if test="slCellNbankOtherRefuse != null">
        SL_CELL_NBANK_OTHER_REFUSE = #{slCellNbankOtherRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellAbnormal != null">
        SL_LM_CELL_ABNORMAL = #{slLmCellAbnormal,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellPhoneOverdue != null">
        SL_LM_CELL_PHONE_OVERDUE = #{slLmCellPhoneOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellBankBad != null">
        SL_LM_CELL_BANK_BAD = #{slLmCellBankBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellBankOverdue != null">
        SL_LM_CELL_BANK_OVERDUE = #{slLmCellBankOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellBankFraud != null">
        SL_LM_CELL_BANK_FRAUD = #{slLmCellBankFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellBankLost != null">
        SL_LM_CELL_BANK_LOST = #{slLmCellBankLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellBankRefuse != null">
        SL_LM_CELL_BANK_REFUSE = #{slLmCellBankRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankP2pBad != null">
        SL_LM_CELL_NBANK_P2P_BAD = #{slLmCellNbankP2pBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankP2pOverdue != null">
        SL_LM_CELL_NBANK_P2P_OVERDUE = #{slLmCellNbankP2pOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankP2pFraud != null">
        SL_LM_CELL_NBANK_P2P_FRAUD = #{slLmCellNbankP2pFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankP2pLost != null">
        SL_LM_CELL_NBANK_P2P_LOST = #{slLmCellNbankP2pLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankP2pRefuse != null">
        SL_LM_CELL_NBANK_P2P_REFUSE = #{slLmCellNbankP2pRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankMcBad != null">
        SL_LM_CELL_NBANK_MC_BAD = #{slLmCellNbankMcBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankMcOverdue != null">
        SL_LM_CELL_NBANK_MC_OVERDUE = #{slLmCellNbankMcOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankMcFraud != null">
        SL_LM_CELL_NBANK_MC_FRAUD = #{slLmCellNbankMcFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankMcLost != null">
        SL_LM_CELL_NBANK_MC_LOST = #{slLmCellNbankMcLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankMcRefuse != null">
        SL_LM_CELL_NBANK_MC_REFUSE = #{slLmCellNbankMcRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCaBad != null">
        SL_LM_CELL_NBANK_CA_BAD = #{slLmCellNbankCaBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCaOverdue != null">
        SL_LM_CELL_NBANK_CA_OVERDUE = #{slLmCellNbankCaOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCaFraud != null">
        SL_LM_CELL_NBANK_CA_FRAUD = #{slLmCellNbankCaFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCaLost != null">
        SL_LM_CELL_NBANK_CA_LOST = #{slLmCellNbankCaLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCaRefuse != null">
        SL_LM_CELL_NBANK_CA_REFUSE = #{slLmCellNbankCaRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankComBad != null">
        SL_LM_CELL_NBANK_COM_BAD = #{slLmCellNbankComBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankComOverdue != null">
        SL_LM_CELL_NBANK_COM_OVERDUE = #{slLmCellNbankComOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankComFraud != null">
        SL_LM_CELL_NBANK_COM_FRAUD = #{slLmCellNbankComFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankComLost != null">
        SL_LM_CELL_NBANK_COM_LOST = #{slLmCellNbankComLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankComRefuse != null">
        SL_LM_CELL_NBANK_COM_REFUSE = #{slLmCellNbankComRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCfBad != null">
        SL_LM_CELL_NBANK_CF_BAD = #{slLmCellNbankCfBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCfOverdue != null">
        SL_LM_CELL_NBANK_CF_OVERDUE = #{slLmCellNbankCfOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCfFraud != null">
        SL_LM_CELL_NBANK_CF_FRAUD = #{slLmCellNbankCfFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCfLost != null">
        SL_LM_CELL_NBANK_CF_LOST = #{slLmCellNbankCfLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankCfRefuse != null">
        SL_LM_CELL_NBANK_CF_REFUSE = #{slLmCellNbankCfRefuse,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankOtherBad != null">
        SL_LM_CELL_NBANK_OTHER_BAD = #{slLmCellNbankOtherBad,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankOtherOverdue != null">
        SL_LM_CELL_NBANK_OTHER_OVERDUE = #{slLmCellNbankOtherOverdue,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankOtherFraud != null">
        SL_LM_CELL_NBANK_OTHER_FRAUD = #{slLmCellNbankOtherFraud,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankOtherLost != null">
        SL_LM_CELL_NBANK_OTHER_LOST = #{slLmCellNbankOtherLost,jdbcType=VARCHAR},
      </if>
      <if test="slLmCellNbankOtherRefuse != null">
        SL_LM_CELL_NBANK_OTHER_REFUSE = #{slLmCellNbankOtherRefuse,jdbcType=VARCHAR},
      </if>
      <if test="inputDate != null">
        INPUT_DATE = #{inputDate,jdbcType=VARCHAR},
      </if>
      <if test="inputTime != null">
        INPUT_TIME = #{inputTime,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateDate != null">
        LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null">
        LAST_UPDATE_TIME = #{lastUpdateTime,jdbcType=VARCHAR},
      </if>
      <if test="swiftNumber != null">
        SWIFT_NUMBER = #{swiftNumber,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        CODE = #{code,jdbcType=VARCHAR},
      </if>
    </set>
    where APP_NO = #{appNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bea.olp.BIZ_BR_SPECIALLIST_C">
    update BIZ_BR_SPECIALLIST_C
    set ID = #{id,jdbcType=VARCHAR},
      CELL = #{cell,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      LINKMAN_CELL = #{linkmanCell,jdbcType=VARCHAR},
      TIME_RANGE = #{timeRange,jdbcType=VARCHAR},
      FLAG_SPECIALLIST_C = #{flagSpeciallistC,jdbcType=VARCHAR},
      SL_ID_ABNORMAL = #{slIdAbnormal,jdbcType=VARCHAR},
      SL_ID_PHONE_OVERDUE = #{slIdPhoneOverdue,jdbcType=VARCHAR},
      SL_ID_COURT_BAD = #{slIdCourtBad,jdbcType=VARCHAR},
      SL_ID_COURT_EXECUTED = #{slIdCourtExecuted,jdbcType=VARCHAR},
      SL_ID_BANK_BAD = #{slIdBankBad,jdbcType=VARCHAR},
      SL_ID_BANK_OVERDUE = #{slIdBankOverdue,jdbcType=VARCHAR},
      SL_ID_BANK_FRAUD = #{slIdBankFraud,jdbcType=VARCHAR},
      SL_ID_BANK_LOST = #{slIdBankLost,jdbcType=VARCHAR},
      SL_ID_BANK_REFUSE = #{slIdBankRefuse,jdbcType=VARCHAR},
      SL_ID_P2P_BAD = #{slIdP2pBad,jdbcType=VARCHAR},
      SL_ID_P2P_OVERDUE = #{slIdP2pOverdue,jdbcType=VARCHAR},
      SL_ID_P2P_FRAUD = #{slIdP2pFraud,jdbcType=VARCHAR},
      SL_ID_P2P_LOST = #{slIdP2pLost,jdbcType=VARCHAR},
      SL_ID_P2P_REFUSE = #{slIdP2pRefuse,jdbcType=VARCHAR},
      SL_ID_NBANK_P2P_BAD = #{slIdNbankP2pBad,jdbcType=VARCHAR},
      SL_ID_NBANK_P2P_OVERDUE = #{slIdNbankP2pOverdue,jdbcType=VARCHAR},
      SL_ID_NBANK_P2P_FRAUD = #{slIdNbankP2pFraud,jdbcType=VARCHAR},
      SL_ID_NBANK_P2P_LOST = #{slIdNbankP2pLost,jdbcType=VARCHAR},
      SL_ID_NBANK_P2P_REFUSE = #{slIdNbankP2pRefuse,jdbcType=VARCHAR},
      SL_ID_NBANK_MC_BAD = #{slIdNbankMcBad,jdbcType=VARCHAR},
      SL_ID_NBANK_MC_OVERDUE = #{slIdNbankMcOverdue,jdbcType=VARCHAR},
      SL_ID_NBANK_MC_FRAUD = #{slIdNbankMcFraud,jdbcType=VARCHAR},
      SL_ID_NBANK_MC_LOST = #{slIdNbankMcLost,jdbcType=VARCHAR},
      SL_ID_NBANK_MC_REFUSE = #{slIdNbankMcRefuse,jdbcType=VARCHAR},
      SL_ID_NBANK_CA_BAD = #{slIdNbankCaBad,jdbcType=VARCHAR},
      SL_ID_NBANK_CA_OVERDUE = #{slIdNbankCaOverdue,jdbcType=VARCHAR},
      SL_ID_NBANK_CA_FRAUD = #{slIdNbankCaFraud,jdbcType=VARCHAR},
      SL_ID_NBANK_CA_LOST = #{slIdNbankCaLost,jdbcType=VARCHAR},
      SL_ID_NBANK_CA_REFUSE = #{slIdNbankCaRefuse,jdbcType=VARCHAR},
      SL_ID_NBANK_COM_BAD = #{slIdNbankComBad,jdbcType=VARCHAR},
      SL_ID_NBANK_COM_OVERDUE = #{slIdNbankComOverdue,jdbcType=VARCHAR},
      SL_ID_NBANK_COM_FRAUD = #{slIdNbankComFraud,jdbcType=VARCHAR},
      SL_ID_NBANK_COM_LOST = #{slIdNbankComLost,jdbcType=VARCHAR},
      SL_ID_NBANK_COM_REFUSE = #{slIdNbankComRefuse,jdbcType=VARCHAR},
      SL_ID_NBANK_CF_BAD = #{slIdNbankCfBad,jdbcType=VARCHAR},
      SL_ID_NBANK_CF_OVERDUE = #{slIdNbankCfOverdue,jdbcType=VARCHAR},
      SL_ID_NBANK_CF_FRAUD = #{slIdNbankCfFraud,jdbcType=VARCHAR},
      SL_ID_NBANK_CF_LOST = #{slIdNbankCfLost,jdbcType=VARCHAR},
      SL_ID_NBANK_CF_REFUSE = #{slIdNbankCfRefuse,jdbcType=VARCHAR},
      SL_ID_NBANK_OTHER_BAD = #{slIdNbankOtherBad,jdbcType=VARCHAR},
      SL_ID_NBANK_OTHER_OVERDUE = #{slIdNbankOtherOverdue,jdbcType=VARCHAR},
      SL_ID_NBANK_OTHER_FRAUD = #{slIdNbankOtherFraud,jdbcType=VARCHAR},
      SL_ID_NBANK_OTHER_LOST = #{slIdNbankOtherLost,jdbcType=VARCHAR},
      SL_ID_NBANK_OTHER_REFUSE = #{slIdNbankOtherRefuse,jdbcType=VARCHAR},
      SL_CELL_ABNORMAL = #{slCellAbnormal,jdbcType=VARCHAR},
      SL_CELL_PHONE_OVERDUE = #{slCellPhoneOverdue,jdbcType=VARCHAR},
      SL_CELL_BANK_BAD = #{slCellBankBad,jdbcType=VARCHAR},
      SL_CELL_BANK_OVERDUE = #{slCellBankOverdue,jdbcType=VARCHAR},
      SL_CELL_BANK_FRAUD = #{slCellBankFraud,jdbcType=VARCHAR},
      SL_CELL_BANK_LOST = #{slCellBankLost,jdbcType=VARCHAR},
      SL_CELL_BANK_REFUSE = #{slCellBankRefuse,jdbcType=VARCHAR},
      SL_CELL_P2P_BAD = #{slCellP2pBad,jdbcType=VARCHAR},
      SL_CELL_P2P_OVERDUE = #{slCellP2pOverdue,jdbcType=VARCHAR},
      SL_CELL_P2P_FRAUD = #{slCellP2pFraud,jdbcType=VARCHAR},
      SL_CELL_P2P_LOST = #{slCellP2pLost,jdbcType=VARCHAR},
      SL_CELL_P2P_REFUSE = #{slCellP2pRefuse,jdbcType=VARCHAR},
      SL_CELL_NBANK_P2P_BAD = #{slCellNbankP2pBad,jdbcType=VARCHAR},
      SL_CELL_NBANK_P2P_OVERDUE = #{slCellNbankP2pOverdue,jdbcType=VARCHAR},
      SL_CELL_NBANK_P2P_FRAUD = #{slCellNbankP2pFraud,jdbcType=VARCHAR},
      SL_CELL_NBANK_P2P_LOST = #{slCellNbankP2pLost,jdbcType=VARCHAR},
      SL_CELL_NBANK_P2P_REFUSE = #{slCellNbankP2pRefuse,jdbcType=VARCHAR},
      SL_CELL_NBANK_MC_BAD = #{slCellNbankMcBad,jdbcType=VARCHAR},
      SL_CELL_NBANK_MC_OVERDUE = #{slCellNbankMcOverdue,jdbcType=VARCHAR},
      SL_CELL_NBANK_MC_FRAUD = #{slCellNbankMcFraud,jdbcType=VARCHAR},
      SL_CELL_NBANK_MC_LOST = #{slCellNbankMcLost,jdbcType=VARCHAR},
      SL_CELL_NBANK_MC_REFUSE = #{slCellNbankMcRefuse,jdbcType=VARCHAR},
      SL_CELL_NBANK_CA_BAD = #{slCellNbankCaBad,jdbcType=VARCHAR},
      SL_CELL_NBANK_CA_OVERDUE = #{slCellNbankCaOverdue,jdbcType=VARCHAR},
      SL_CELL_NBANK_CA_FRAUD = #{slCellNbankCaFraud,jdbcType=VARCHAR},
      SL_CELL_NBANK_CA_LOST = #{slCellNbankCaLost,jdbcType=VARCHAR},
      SL_CELL_NBANK_CA_REFUSE = #{slCellNbankCaRefuse,jdbcType=VARCHAR},
      SL_CELL_NBANK_COM_BAD = #{slCellNbankComBad,jdbcType=VARCHAR},
      SL_CELL_NBANK_COM_OVERDUE = #{slCellNbankComOverdue,jdbcType=VARCHAR},
      SL_CELL_NBANK_COM_FRAUD = #{slCellNbankComFraud,jdbcType=VARCHAR},
      SL_CELL_NBANK_COM_LOST = #{slCellNbankComLost,jdbcType=VARCHAR},
      SL_CELL_NBANK_COM_REFUSE = #{slCellNbankComRefuse,jdbcType=VARCHAR},
      SL_CELL_NBANK_CF_BAD = #{slCellNbankCfBad,jdbcType=VARCHAR},
      SL_CELL_NBANK_CF_OVERDUE = #{slCellNbankCfOverdue,jdbcType=VARCHAR},
      SL_CELL_NBANK_CF_FRAUD = #{slCellNbankCfFraud,jdbcType=VARCHAR},
      SL_CELL_NBANK_CF_LOST = #{slCellNbankCfLost,jdbcType=VARCHAR},
      SL_CELL_NBANK_CF_REFUSE = #{slCellNbankCfRefuse,jdbcType=VARCHAR},
      SL_CELL_NBANK_OTHER_BAD = #{slCellNbankOtherBad,jdbcType=VARCHAR},
      SL_CELL_NBANK_OTHER_OVERDUE = #{slCellNbankOtherOverdue,jdbcType=VARCHAR},
      SL_CELL_NBANK_OTHER_FRAUD = #{slCellNbankOtherFraud,jdbcType=VARCHAR},
      SL_CELL_NBANK_OTHER_LOST = #{slCellNbankOtherLost,jdbcType=VARCHAR},
      SL_CELL_NBANK_OTHER_REFUSE = #{slCellNbankOtherRefuse,jdbcType=VARCHAR},
      SL_LM_CELL_ABNORMAL = #{slLmCellAbnormal,jdbcType=VARCHAR},
      SL_LM_CELL_PHONE_OVERDUE = #{slLmCellPhoneOverdue,jdbcType=VARCHAR},
      SL_LM_CELL_BANK_BAD = #{slLmCellBankBad,jdbcType=VARCHAR},
      SL_LM_CELL_BANK_OVERDUE = #{slLmCellBankOverdue,jdbcType=VARCHAR},
      SL_LM_CELL_BANK_FRAUD = #{slLmCellBankFraud,jdbcType=VARCHAR},
      SL_LM_CELL_BANK_LOST = #{slLmCellBankLost,jdbcType=VARCHAR},
      SL_LM_CELL_BANK_REFUSE = #{slLmCellBankRefuse,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_P2P_BAD = #{slLmCellNbankP2pBad,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_P2P_OVERDUE = #{slLmCellNbankP2pOverdue,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_P2P_FRAUD = #{slLmCellNbankP2pFraud,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_P2P_LOST = #{slLmCellNbankP2pLost,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_P2P_REFUSE = #{slLmCellNbankP2pRefuse,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_MC_BAD = #{slLmCellNbankMcBad,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_MC_OVERDUE = #{slLmCellNbankMcOverdue,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_MC_FRAUD = #{slLmCellNbankMcFraud,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_MC_LOST = #{slLmCellNbankMcLost,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_MC_REFUSE = #{slLmCellNbankMcRefuse,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_CA_BAD = #{slLmCellNbankCaBad,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_CA_OVERDUE = #{slLmCellNbankCaOverdue,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_CA_FRAUD = #{slLmCellNbankCaFraud,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_CA_LOST = #{slLmCellNbankCaLost,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_CA_REFUSE = #{slLmCellNbankCaRefuse,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_COM_BAD = #{slLmCellNbankComBad,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_COM_OVERDUE = #{slLmCellNbankComOverdue,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_COM_FRAUD = #{slLmCellNbankComFraud,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_COM_LOST = #{slLmCellNbankComLost,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_COM_REFUSE = #{slLmCellNbankComRefuse,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_CF_BAD = #{slLmCellNbankCfBad,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_CF_OVERDUE = #{slLmCellNbankCfOverdue,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_CF_FRAUD = #{slLmCellNbankCfFraud,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_CF_LOST = #{slLmCellNbankCfLost,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_CF_REFUSE = #{slLmCellNbankCfRefuse,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_OTHER_BAD = #{slLmCellNbankOtherBad,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_OTHER_OVERDUE = #{slLmCellNbankOtherOverdue,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_OTHER_FRAUD = #{slLmCellNbankOtherFraud,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_OTHER_LOST = #{slLmCellNbankOtherLost,jdbcType=VARCHAR},
      SL_LM_CELL_NBANK_OTHER_REFUSE = #{slLmCellNbankOtherRefuse,jdbcType=VARCHAR},
      INPUT_DATE = #{inputDate,jdbcType=VARCHAR},
      INPUT_TIME = #{inputTime,jdbcType=VARCHAR},
      LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=VARCHAR},
      LAST_UPDATE_TIME = #{lastUpdateTime,jdbcType=VARCHAR},
      SWIFT_NUMBER = #{swiftNumber,jdbcType=VARCHAR},
      CODE = #{code,jdbcType=VARCHAR}
    where APP_NO = #{appNo,jdbcType=VARCHAR}
  </update>
</mapper>